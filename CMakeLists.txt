project(sfml-packman)
cmake_minimum_required(VERSION 2.8)

if(UNIX)
set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -Wall -Wextra")
set(DEBUG_LIBS sfml-system sfml-audio sfml-graphics sfml-window)
set(RELEASE_LIBS sfml-system sfml-audio sfml-graphics sfml-window)
else(UNIX)
add_definitions(-DSFML_DYNAMIC)
set(DEBUG_LIBS sfml-system-d sfml-audio-d sfml-graphics-d sfml-window-d opengl32 freetype jpeg winmm)
set(RELEASE_LIBS sfml-system sfml-audio sfml-graphics sfml-window opengl32 freetype jpeg winmm)
endif(UNIX)

aux_source_directory(packman_1 SRC_LIST_1)
add_executable(packman_1 ${SRC_LIST_1})
target_link_libraries(packman_1 debug ${DEBUG_LIBS})
target_link_libraries(packman_1 optimized ${RELEASE_LIBS})

aux_source_directory(packman_2 SRC_LIST_2)
add_executable(packman_2 ${SRC_LIST_2})
target_link_libraries(packman_2 debug ${DEBUG_LIBS})
target_link_libraries(packman_2 optimized ${RELEASE_LIBS})

aux_source_directory(packman_3 SRC_LIST_3)
add_executable(packman_3 ${SRC_LIST_3})
target_link_libraries(packman_3 debug ${DEBUG_LIBS})
target_link_libraries(packman_3 optimized ${RELEASE_LIBS})

aux_source_directory(packman_4 SRC_LIST_4)
add_executable(packman_4 ${SRC_LIST_4})
target_link_libraries(packman_4 debug ${DEBUG_LIBS})
target_link_libraries(packman_4 optimized ${RELEASE_LIBS})

aux_source_directory(packman_5 SRC_LIST_5)
add_executable(packman_5 ${SRC_LIST_5})
target_link_libraries(packman_5 debug ${DEBUG_LIBS})
target_link_libraries(packman_5 optimized ${RELEASE_LIBS})

aux_source_directory(packman_6 SRC_LIST_6)
add_executable(packman_6 ${SRC_LIST_6})
target_link_libraries(packman_6 debug ${DEBUG_LIBS})
target_link_libraries(packman_6 optimized ${RELEASE_LIBS})
